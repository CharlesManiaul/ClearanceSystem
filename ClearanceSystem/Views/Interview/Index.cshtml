@{
    ViewData["Title"] = "Interview Page";
}

@model Interview

<div class="page-header d-print-none">
    <div class="container-xxl">
        <div class="row g-2 align-items-center">
            <div class="col-6">
                <!-- Page pre-title -->
                <div class="page-pretitle">
                    Index - Interview
                    <h2 class="page-title">
                        List of Interviews
                    </h2>
                </div>
            </div>

            <div class="col-auto ms-auto d-print-none">


            </div>

        </div>

    </div>
</div>

<div class="page-body">
    <div class="container-xxl">
        <div class="card">
            <div id="table-default">
                <div class="col- d-lg-flex px-3 pt-3">

                    <div class="d-flex text-center text-lg-start mb-3">
                        <div class="text-muted">
                            Show
                            <div class="mx-2 d-inline-block w-25">
                                <input id="entries" type="number" class="form-control" value="10" autocomplete="off">
                            </div>
                            entries
                        </div>

                    </div>

                    <div class="input-icon mb-3 ms-auto">
                        <input type="search" class="search form-control" placeholder="Search">
                        <span class="input-icon-addon">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0" /><path d="M21 21l-6 -6" /></svg>
                        </span>

                    </div>
                </div>


                <hr class="m-0">

                <div class="table-responsive">
                    <table class="table text-muted table-mobile-sm" id="datatable">
                        <thead class="table-thead">
                            <tr>
                                <th>Status</th>
                                <th><button class="table-sort" data-sort="sort-ID">Interview ID</button></th>
                                <th><button class="table-sort" data-sort="sort-EmpId">Employee ID</button></th>
                                <th><button class="table-sort" data-sort="sort-EmpName">Employee Name</button></th>
                                <th><button class="table-sort" data-sort="sort-Department">Department</button></th>
                                <th><button class="table-sort" data-sort="sort-CrtdBy">Created By</button></th>
                                <th><button class="table-sort" data-sort="sort-IDay">Interview Date</button></th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody class="table-tbody">
                            @if (Model.interview == null || !Model.interview.Any())
                            {
                                <tr>
                                    <td colspan="8" class="text-center">NO DATA AVAILABLE</td>
                                </tr>
                            }

                            else
                            {
                                @foreach (var row in Model.interview)
                                {
                                    <tr>
                                        @{
                                            string badgeClass = "bg-secondary-lt";
                                           
                                            switch (row.Status)
                                            {
                                                case "Scheduled":
                                                    badgeClass = "bg-danger-lt";
                                                   
                                                    break;

                                                case "for Exit Interview":
                                                    badgeClass = "bg-warning-lt";
                                                   
                                                    break;
                                                case "Completed":
                                                    badgeClass = "bg-success-lt";
                                                   
                                                    break;
                                                case "Unscheduled":
                                                    badgeClass = "bg-secondary-lt";
                                                   
                                                    break;

                                            }

                                        }

                                        <td data-label="Status">
                                            <span class="badge @badgeClass">@row.Status</span>
                                        </td>

                                        <td data-label="Interview Id" class="text-nowrap sort-ID">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.IVId</a>
                                        </td>
                                        <td data-label="Employee Id" class="text-nowrap sort-EmpId">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.EmpId</a>
                                        </td>
                                        <td data-label="Employee Name" class="text-nowrap sort-EmpName">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.EmpName</a>
                                        </td>
                                        <td data-label="Department" class="text-nowrap sort-Department">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.DepartmentName</a>
                                        </td>
                                        <td data-label="Created By" class="text-nowrap sort-CrtdBy">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.CrtdBy</a>
                                        </td>
                                        <td data-label="Interview Date" class="text-nowrap sort-IDay">
                                            <a href="Interview/Details/@row.IVId" class="text-decoration-none theme-text">@row.SchedDate</a>
                                        </td>
                                        @if (row.Status == "for Exit Interview")
                                        {
                                        <td data-label="QR">
                                            <button type="button" class="btn btn-outline-lime btn_generate"
                                                    data-empid="@row.EmpId"
                                                    data-ivid="@row.IVId"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#ModalQR"
                                                    onclick="generatePostQRCode(this)">
                                                Exit Interview Form
                                            </button>
                                        </td>
                                        }


                                        <td data-label="Action">
                                            @if (row.Status == "Scheduled")
                                            {
                                                <a type="button" class="btn btn-warning btnFinish" data-fivid="@row.IVId" data-bs-toggle="modal" data-bs-target="#finishModal">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-calendar-check">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M11.5 21h-5.5a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v6" />
                                                        <path d="M16 3v4" />
                                                        <path d="M8 3v4" />
                                                        <path d="M4 11h16" />
                                                        <path d="M15 19l2 2l4 -4" />
                                                    </svg>
                                                    Finish
                                                </a>
                                            }
                                            @if (row.Status == "Scheduled")
                                            {
                                                <a type="button" class="btn btn-danger btnDelete" data-rid="@row.RId" data-ivid="@row.IVId" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-trash">
                                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                        <path d="M4 7l16 0" />
                                                        <path d="M10 11l0 6" />
                                                        <path d="M14 11l0 6" />
                                                        <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
                                                        <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
                                                    </svg>
                                                </a>
                                            }
                                            @if (row.Status == "Unscheduled")
                                            {
                                                <a type="button" class="btn btn-danger btnSched" data-rid="@row.RId" data-ivid="@row.IVId" data-bs-toggle="modal" data-bs-target="#modalGroup">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-bubble-text"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M7 10h10" /><path d="M9 14h5" /><path d="M12.4 3a5.34 5.34 0 0 1 4.906 3.239a5.333 5.333 0 0 1 -1.195 10.6a4.26 4.26 0 0 1 -5.28 1.863l-3.831 2.298v-3.134a2.668 2.668 0 0 1 -1.795 -3.773a4.8 4.8 0 0 1 2.908 -8.933a5.33 5.33 0 0 1 4.287 -2.16" /></svg>
                                                    Schedule
                                                </a>
                                            }
                                        </td>

                                    </tr>
                                }

                            }

                        </tbody>
                    </table>
                </div>


                <div class="card-footer d-flex align-items-center">
                    <ul class="pagination m-0 ms-auto"></ul>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- MODAL FOR DELETE  -->
@using (Html.BeginForm("DeleteInterview", "Interview", FormMethod.Post, new { id = "form-Delete" }))
{

    <!-- Delete Confirmation Modal -->
    <div class="modal modal-blur fade" id="deleteModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="22" height="22" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M4 7h16" />
                            <path d="M10 11v6" />
                            <path d="M14 11v6" />
                            <path d="M5 7l1 12 a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
                            <path d="M9 7v-3h6v3" />
                        </svg>
                        Confirm Deletion
                    </h5>
                    <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                @Html.HiddenFor(m => m.RId, new { id = "delRId" })
                @Html.HiddenFor(m => m.IVId, new { id = "delIVId" })
                <div class="modal-body text-center">
                    <div class="mb-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-alert-triangle text-danger" width="56" height="56" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M12 9v2m0 4v.01" />
                            <path d="M3 19h18l-9 -16z" />
                        </svg>
                    </div>
                    <h5 class="text-danger fw-bold">Are you sure?</h5>
                    <p class="text-muted">This action <strong>cannot be undone.</strong> You are about to delete this Clearance permanently.</p>
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button type="button" class="btn btn-light border" data-bs-dismiss="modal">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-x" width="18" height="18" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M18 6l-12 12" />
                            <path d="M6 6l12 12" />
                        </svg>
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-danger" id="confirmDelete">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="18" height="18" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M4 7h16" />
                            <path d="M10 11v6" />
                            <path d="M14 11v6" />
                            <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
                            <path d="M9 7v-3h6v3" />
                        </svg>
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

}



<!-- MODAL FOR INTERVIEW  -->
@using (Html.BeginForm("SaveInterview", "Interview", FormMethod.Post, new { id = "form-interview" }))
{
    <div class="modal modal-blur fade" id="modalGroup">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Interview</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Schedule Date</label>
                        <div class="col">
                            @Html.TextBoxFor(m => m.SchedDate, new { @class = "form-control date-input", @required = "required" })
                        </div>
                         @Html.HiddenFor(m => m.IVId, new { id = "IVId" })
                    </div>
                </div>

                <div class="modal-footer">

                    <a class="btn btn-ghost-secondary" data-bs-dismiss="modal">
                        Cancel
                    </a>

                    <button class="btn btn-primary btnInterview">
                        <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                        Procceed
                    </button>

                </div>

            </div>
        </div>
    </div>
}

<!-- MODAL FOR INTERVIEW  -->


<!-- Modal for displaying QR code -->
<div class="modal fade" id="ModalQR" tabindex="-1" aria-labelledby="ModalQRLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalQRLabel">QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex flex-column align-items-center justify-content-center text-center">
                <img id="qr-code-image" src="" alt="QR Code" class="img-fluid mb-2" />
                <p id="qr-code-link"></p>
            </div>
        </div>
    </div>
</div>
<!-- Modal for displaying QR code -->

<!-- Finish Modal -->
@using (Html.BeginForm("FinishInterview", "Interview", FormMethod.Post, new { id = "form-Finish" }))
{

    <div class="modal fade" id="finishModal" tabindex="-1" aria-labelledby="finishModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered">
            <div class="modal-content shadow-lg rounded-3">
                <div class="modal-header bg-warning text-white">
                    <h5 class="modal-title fw-bold" id="finishModalLabel">Confirm Finish</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                @Html.HiddenFor(m => m.IVId, new { id = "finIVId" })
                <div class="modal-body text-center p-4">
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-check-circle text-warning mb-3" viewBox="0 0 16 16">

                        <path d="M5.5 8.5l2 2 3.5-3.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" fill="none" />
                    </svg>
                    <p class="mb-0 fs-5">Are you sure you want to mark this interview as finished?</p>
                </div>
                <div class="modal-footer border-0 d-flex justify-content-center">
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning px-4" id="confirmFinish">Finish</button>
                </div>
            </div>
        </div>
    </div>

}
<!-- Finish Modal -->



@section Scripts
{
    <script>

        $(document).ready(function () { 
            $(".tom-select-subtitle").on("change", function () {
                var selectedOption = $(this).find("option:selected");
                var rid = selectedOption.data("rid"); // Get the data-rid attribute
                $("#IntRId").val(rid); // Set the value to the hidden input
            });
        });                 


    </script>


    <script>

        $(document).ready(function () {
            $(document).on("click", ".btnDelete", function () {
                var rid = $(this).attr("data-rid"); // Get the data-rid
                var ivid = $(this).attr("data-ivid"); // Get the data-rid attribute
                $("#delRId").val(rid); // Set the value to the hidden
                $("#delIVId").val(ivid); // Set the value to the hidden input
            });
        });
         $(document).ready(function () {
            $(document).on("click", ".btnSched", function () {
              
                var ivid = $(this).attr("data-ivid"); // Get the data-rid attribute
             
                $("#IVId").val(ivid); // Set the value to the hidden input
            });
        });


        $(document).ready(function () {
            $(document).on("click", ".btnFinish", function () {
               
                var fivid = $(this).attr("data-fivid"); // Get the data-rid attribute
                
                $("#finIVId").val(fivid); // Set the value to the hidden input
            });
        });


        function generatePostQRCode(button) {
            // Retrieve the data attributes from the clicked button
            const IVId = button.getAttribute('data-ivid');
            const EmpId = button.getAttribute('data-empid');

            // Ensure ExamId and TEId are available
            if (!IVId) {
                console.error('IVId is missing');
                return;
            }

            if (!EmpId) {
                console.error('EmpId is missing');
                return;
            }

            // Construct the base URL
            const baseUrl = window.location.origin;
            let url;


            url = `${baseUrl}/Interview/Form/${IVId}/${EmpId}`;


            console.log(`Generated URL: ${url}`); // Debugging log

            // Generate the QR code URL
            const qrCodeUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(url)}`;

            // Set the QR code image in the modal
            document.getElementById('qr-code-image').src = qrCodeUrl;

            // Set the text content of the paragraph to display the URL
            document.getElementById('qr-code-link').textContent = url;
        }

    </script>

}

